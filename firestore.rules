rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Default: deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Orders collection rules
    match /orders/{orderId} {
      allow create: if isAuthenticated() 
        && request.resource.data.buyerId == request.auth.uid
        && request.resource.data.status == 'pending';
      
      allow read: if isAuthenticated() 
        && (request.auth.uid == resource.data.buyerId 
        || request.auth.uid == resource.data.sellerId);
        
      allow update: if isAuthenticated()
        && (request.auth.uid == resource.data.buyerId 
        || request.auth.uid == resource.data.sellerId)
        && request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['status']);
    }

    // Bikes collection rules
    match /bikes/{bikeId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() 
        && request.auth.uid == resource.data.sellerId;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
  }
}
